.text # указатель на основную часть кода

__start: #начало выполнения программы
.globl __start

la a3, array_length #длинна массива
lw a3, 0(a3)
#входим в цикл (инструкция выхода из цикла
#i>= длинне массива, если да то переходим к 49 строке
# если нет идем дальше по программе
la a4, array #a4 адрес первого элемента массива
#инструкция вычисления адреса массива
#значение вставляется в a5
li a2, 1 #i

loop1:
#t0 - записываем массив
#t1 - массив i-1
#t2 - j=i
  bgeu a2, a3, loop_exit
    slli a5, a2, 2
    add a5, a4, a5
# если элементы вставки > массива j переход к строке 45
# и увеличиваем значение i   
    lw t1, -4(a5)
    lw t0, 0(a5)
#получаем значение массива j и записываем в t6    
    mv t2, a2
    bgeu t0, t1, loop_exit3
#пока элементы вставки > массива j если условие верно переходим в строку 43   
loop2:
  slli t3, t2, 2
#записываем в массив j+1 значение массива j 
#делаем j-1 и записываем в t5  ссылку на массив j+1 для дальнейшей вставки числа
#переход в строку 26
  add t3, a4, t3
  lw t6, -4(t3)
  beqz t2, loop_exit2
  bgeu t0, t6, loop_exit2
#элемент для вставки вставляем в ячейку массива j+1 делаем i+1
#переход в строку 11
  sw t6, 0(t3)
  addi t2, t2, -1
  mv t5, t3
  jal zero, loop2
  
loop_exit2:
    sw t0, -4(t5)
#завершение работы программы
loop_exit3:
    addi a2, a2, 1
    jal zero, loop1
#данные
loop_exit:
  finish:
    li a0, 10     
    li a1, 0
    ecall
    
.rodata
#длина
  array_length:
    .word 10
    
.data 
#неотсортированный массив
  array:
    .word 5, 7, 8, 10, 4, 2, 3, 1, 6, 9    
    